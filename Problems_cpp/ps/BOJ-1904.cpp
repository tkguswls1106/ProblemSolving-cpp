#include <iostream>

using namespace std;

// 1 => 1가지
// 00 11 => 2가지
// 100 001 111 => 3가지
// 0011 0000 1001 1100 1111 => 5가지
// 00111 10011 11001 11100 11111 00001 10000 00100 => 7가지
// ==> 이는 마치 피보나치 수열처럼, dp[i] = dp[i-1] + dp[i-2] 식이 나온다.
// 참고로 dp[N]은 N-2에서 뒷부분에 00만 붙인 경우와, N-1에서 뒷부분에 1만 붙인 경우를 합한 경우의 수 이다.

long long dp[1000002] = { 0, };

int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);

    int n;
    cin >> n;

    dp[1] = 1;
    dp[2] = 2;

    for(int i=3; i<=n; i++) {
        dp[i] = (dp[i-1] + dp[i-2]) % 15746;  // 출력문에서만이 아닌, 여기서 아예 mod연산을 해줘야지 자료형 범위 초과를 막을 수 있다.
    }

    cout << dp[n];


    return 0;
}